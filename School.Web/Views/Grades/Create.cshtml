@model IEnumerable<School.Web.Data.Entities.Grade>

@{
    ViewData["Title"] = "Create/Edit";
}

<!-- ##### Breadcumb Area Start ##### -->
<div class="breadcumb-area bg-img" style="background-image: url(../img/bg-img/breadcumb.jpg);">
    <div class="bradcumbContent">
        <h2>Create/Edit Grades</h2>
    </div>
</div>
<!-- ##### Breadcumb Area End ##### -->
<!-- ##### About Us Area Start ##### -->
<section class="about-us-area mt-50 section-padding-100">
    <div class="container">
        <div class="row">
            <div class="col-12">
                <div class="section-heading text-center mx-auto wow fadeInUp" data-wow-delay="300ms">
                    <h3>Create/Edit Grades</h3>
                </div>
            </div>
        </div>
        <section class="contact-area">
            <div class="contact-content">
                <form asp-action="Create" id="create" method="post" enctype="multipart/form-data">
                    <div class="row">
                        <div class="col-12 wow fadeInUp" data-wow-delay="500ms">
                            <!--BANNER START-->
                            <div class="panel single-accordion">
                                <h6>
                                    <a class="collapsed" style="text-align:center;">
                                        General Information
                                    </a>
                                </h6>
                            </div>
                            <!--BANNER END-->
                            <br />
                            <div class="contact-form-area wow fadeInUp" data-wow-delay="500ms">                               
                                @{
                                    List<object> commands = new List<object>();
                                    commands.Add(new { type = "Edit", buttonOption = new { iconCss = "e-icons e-edit", cssClass = "e-flat" } });                                    
                                    commands.Add(new { type = "Save", buttonOption = new { iconCss = "e-icons e-update", cssClass = "e-flat" } });
                                    commands.Add(new { type = "Cancel", buttonOption = new { iconCss = "e-icons e-cancel-icon", cssClass = "e-flat" } });
                                }
                                <ejs-grid id="Grid" dataSource="@Model" actionBegin="actionBegin" allowSorting="true" allowFiltering="true" allowPaging="true">
                                    <e-grid-filterSettings type="Menu"></e-grid-filterSettings>
                                    <e-grid-editsettings allowEditing="true" mode="Normal"></e-grid-editsettings>
                                    <e-grid-columns>
                                        <e-grid-column field="Id" headerText="Id" visible="false" textAlign="Right" allowEditing="false" width="120" type="number" isPrimaryKey="true"></e-grid-column>
                                        @*<e-grid-column field="Field" headerText="Field" textAlign="Right" width="120" type="string"></e-grid-column>*@
                                        <e-grid-column field="Course.Name" headerText="Course" allowEditing="false" width="150" type="string"></e-grid-column>
                                        <e-grid-column field="Class.Name" headerText="Class" textAlign="Right" allowEditing="false" width="130" type="string"></e-grid-column>
                                        <e-grid-column field="Subject.Name" headerText="Subject" textAlign="Right" allowEditing="false" width="120" type="string"></e-grid-column>
                                        <e-grid-column field="Teacher.FullName" headerText="Teacher" textAlign="Right" allowEditing="false" width="140" type="string"></e-grid-column>
                                        <e-grid-column field="Student.FullName" headerText="Student" allowEditing="false" width="auto" type="string"></e-grid-column>
                                        <e-grid-column field="FinalGrade" uid="FinalGrade" id="FinalGrade" headerText="Final Grade" allowEditing="true" editType="numericedit" width="auto" type="number"></e-grid-column>
                                        @*<e-grid-column field="Approval" headerText="Approval" width="auto" type="string"></e-grid-column>*@
                                        <e-grid-column textAlign="Right" width="auto" commands="commands"></e-grid-column>
                                    </e-grid-columns>
                                </ejs-grid>
                            </div>
                            <!-- ##### About Us Area End ##### -->
                            <a asp-action="Index" class="btn academy-btn mt-30" style="margin-left:40%">Back</a>
                        </div>
                    </div>
                </form>
            </div>
        </section>
    </div>
</section>

<script>
    function actionBegin(args) {
        if (args.requestType === 'save') {
            var data = JSON.stringify({
                Id: args.data['Id'],
                FinalGrade: args.data['FinalGrade'],
            });

            $.ajax({
                url: '@Url.Action("Create","Grades")',
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("RequestVerificationToken",
                        $('input:hidden[name="__RequestVerificationToken"]').val());
                },
                type: 'POST',
                data: data,
                contentType: "application/json; charset=utf-8",
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    alert("Request: " + XMLHttpRequest.toString() + "\n\nStatus: " + textStatus + "\n\nError: " + errorThrown);
                },
                success: function (result) {
                    alert("We returned: " + result);
                },
                //complete: function () {
                //    $("#divLoadingPanel").hide();
                //}
            });
        }
    }
</script>


@*<script>
        function valueChange() {
            var courses = document.getElementById('courses').ej2_instances[0];
            var value = document.getElementById('value');
            var text = document.getElementById('text');
            value.innerHTML = courses.value === null ? 'null' : courses.value.toString();
            text.innerHTML = courses.text === null ? 'null' : courses.text.toString();
        }
    </script>

    <script type="text/javascript">
        function fieldChange() {
            var course = document.getElementById('courses').ej2_instances[0];
            var classes = document.getElementById('classes').ej2_instances[0];
            var subjects = document.getElementById('subjects').ej2_instances[0];
            var field = document.getElementById('fields').ej2_instances[0];
            // disable the state DropDownList
            course.enabled = true;
            // frame the query based on selected value in country DropDownList.
            var tempQuery = new ej.data.Query().where('Field', 'equal', field.text);
            // set the framed query based on selected value in country DropDownList.
            course.query = tempQuery;
            // set null value to state DropDownList text property
            course.text = null;
            // bind the property changes to state DropDownList
            course.dataBind();
            // set null value to city DropDownList text property
            classes.text = null;
            subjects.text = null;
            // disable the city DropDownList
            classes.enabled = false;
            subjects.enabled = false;
            // bind the property changes to City DropDownList
            classes.dataBind();
            subjects.dataBind();
        }
        function courseChange() {
            var classes = document.getElementById('classes').ej2_instances[0];
            var subjects = document.getElementById('subjects').ej2_instances[0];
            var course = document.getElementById('courses').ej2_instances[0];
            classes.enabled = true;
            subjects.enabled = true;
            // Query the data source based on state DropDownList selected value
            var tempQuery1 = new ej.data.Query().where('CourseId', 'equal', course.value);
            var tempQuery2 = new ej.data.Query().where('CourseId', 'equal', course.value);
            // set the framed query based on selected value in city DropDownList.
            classes.query = tempQuery1;
            subjects.query = tempQuery2;
            //clear the existing selection
            classes.text = null;
            subjects.text = null;
            // bind the property change to city DropDownList
            classes.dataBind();
            subjects.dataBind();
        }
        function subjectChange() {
            var course = document.getElementById('courses').ej2_instances[0];
            var classes = document.getElementById('classes').ej2_instances[0];
            var subjects = document.getElementById('subjects').ej2_instances[0];
            var teacher = new Teacher();
            teacher.query = new ej.data.Query().where('SubjectId', 'equal', subjects.value);

            var students = new Student();
            students.query = new ej.data.Query().where('ClassId', 'equal', classes.value);

            var table = document.getSelection();

            //var tempQuery1 = new ej.data.Query().where('ClassId', 'equal', course.value);
            //var tempQuery1 = new ej.data.Query().where('SubjectId', 'equal', subjects.value);

        }
    </script>*@

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
